sudo: required
language: python
env:
  matrix:
  - CHANGE_MINIKUBE_NONE_USER=true
  global:
  - secure: fHqDX7hYJlDYcVYiXeXwufiL8JaGlPiDYQjPOI9WDsdxB+plvJhS3b3cz33aqOLHbgocj8VYYRDtxacz3pcWHIxezSmw4h4BKw2XqOtcMPNQugiSYNrgXmP5D0D/C3B+VlbhfnqyYCyzfxxP6BwFVzColVuZP9fM/sqm5zOFw+RlowKtQwR4kp4L2FkD7y+TQnXRnFg6+paDh9TrYUgzC2ejp2QUf5zxTR5FnTfzaKL/AoAtEGic+RVSFGAq9RWw6yQhxOTaqqAQv8j9O4oW+F085pK8/f0Vi2p2DCoDNXf6mA0OKkwISaQqwxNPfdU3NweE0ciNwpMMWCe0JEM3BEUTQK2YW/8UGoDnkQhLyF7MC/bI6vtb4Id7ORe3e8QlO3nzeFGvranUvFGV6bNgOG6wzNCHXTzgi0/dqUxs5JZMTeZ7cnMFAuBc08LkZ6TIEY/Bd/ffKZX5mnoyR6+TNcvS0iMoutYf+gXhirDDxyhKjUxBsAVXJzjDsILdcNMRg5P2Oa24wB6RulEqh9Da/pGngcsNim/fA1bO5yZVmRmiwo2oBzu7mVJlzj3w7OyjdhAFxRRZ0wUXirFpxaZFZS0y+X4HK8Dw0f7OAXT86WW3+9RYf8hdSZMOtViorlOKgleYMrdYOLrqoN0qYRKNCTO+tbTSAHQtwfev51OAeVA=
before_script:
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl
  && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64
  && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- kubectl cluster-info
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH"
  2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to
  be available"; kubectl get pods --all-namespaces; done
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH"
  2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available";
  kubectl get pods --all-namespaces; done
- docker login -u clippertesting --password "$CLIPPER_TESTING_DOCKERHUB_PASSWORD"
script:
- cd clipper_admin; pip install -e .; cd ..
- kubectl proxy -p 8080 &
- cd integration-tests
- python kubernetes_integration_test.py
- python kubernetes_multi_frontend.py
- python kubernetes_namespace.py
- python multi_tenancy_test.py --kubernetes
