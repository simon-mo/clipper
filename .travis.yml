# Maintainer: Simon Mo <xmo@berkeley.edu>

# Travis will start the build in a VM when sudo is required
sudo: required

language: python


env:
  matrix:
  - CHANGE_MINIKUBE_NONE_USER=true
  secure: "EJuxtmj/bY737uvQLrP0dykQBds1D1M/y0C2kBFdr0EhbZ3K08ET4bLYQOs/KjAm9ZLsLYA0YO5dS5VOIHJjkVWKYWWqOBth4rBvmJpX0BKwQauCZbPxX9L+IZMoow3nYuk9D0FdJ6plVtl9InvBAlPAvKqBUFOGciwbVoMEF4yF7zEwSUrKhx7ySBCOGjFl1IElXJrnVyoFtpu9tEJQqRGT48/rUGkCvJMzxTOHF4sNLX1EVj7i7Wpmfu6RO6ZszlrxIR1THzImE3Wvu9+TAxZEmgr84d1G1oCAFCvsFONnHhbfkoKF8qD9xGD9wKRCe+69MOl2A9u6jNjtfWNbMYmhowvkBbyNs1ylQkFxlNvjJLFSDZcUPUq7ea+4U6fAKy+yQZJJ9dwNwEuxQXjCvcYZiYPyrvHRBxe/uJlByCEypwt+fAQtSuCyOMjWVUeQLjHha/cNRg5Blw9he/PuVBiVKNqG8Pd7NWWdfyPD+xHpK+ueqrZQsdam8NmOg4mSRk3pJDCZo+CoMngxY2kWl9jF6o6UYMk0g3Va4N2mFEwPakqejc4b5DWzpCuzQ4pD3kQTDU79v9gDlJviuqs7KwwVmAl1zOcqt4ZCRvJP9mScOHoQedbi+xcVkcsYPnUPULZqgr6w59KozoHE29UE4N8rM2HZesFdGtV+dfvBGJo="

before_script:
# Download kubectl and minikube
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl
  && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64
  && chmod +x minikube && sudo mv minikube /usr/local/bin/

# Setup minikube
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- kubectl cluster-info
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH"
  2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to
  be available"; kubectl get pods --all-namespaces; done
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH"
  2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available";
  kubectl get pods --all-namespaces; done

# Login to Docker
- docker login -u clippertesting --password "$CLIPPER_TESTING_DOCKERHUB_PASSWORD"

script:
- cd clipper_admin; pip install -q -e .; cd ..
- bash ./bin/shipyard.sh
- bash ./bin/run_travis.sh
